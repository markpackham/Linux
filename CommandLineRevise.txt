Most common commands

ls
ls -a
ls -t 
ls -t
ls -alt

sort sortMeFile.txt
sort takes the standard input and orders it alphabetically for the standard output.

uniq fileWithDuplicateEntries.txt
“unique” and filters out adjacent, duplicate lines in a file. 

(print working directory)
pwd

cd 

cd ..

mkdir myDirectory

touch myTextFile.txt 

The command line is a text interface for the computer’s operating system. To access the command line, we use the terminal.
A filesystem organizes a computer’s files and directories into a tree structure. It starts with the root directory. 
Each parent directory can contain more child directories and files.
From the command line, you can navigate through files and folders on your computer:
pwd outputs the name of the current working directory.
ls lists all files and directories in the working directory.
cd switches you into the directory you specify.
mkdir creates a new directory in the working directory.
touch creates a new file inside the working directory.


In addition to -a, the ls command has several more options. Here are three common options:
-a - lists all contents, including hidden files and directories
-l - lists all contents of a directory in long format
-t - order files and directories by the time they were last modified.
ls -alt lists all contents, including hidden files and directories, in long format, ordered by the date and time they were last modified.

COPY
cp ~/pictures/picture-*.jpg ~/picture-backup

MOVE
mv wonderwoman.txt batman.txt superhero/

RENAME batman to spiderman
mv batman.txt spiderman.txt 

REMOVE
rm waterboy.txt
REMOVE recursively (great for directories)
rm -r slapstick 

Options modify the behavior of commands:
ls -a lists all contents of a directory, including hidden files and directories
ls -l lists all contents in long format
ls -t orders files and directories by the time they were last modified
Multiple options can be used together, like ls -alt
From the command line, you can also copy, move, and remove files and directories:
cp copies files
mv moves and renames files
rm removes files
rm -r removes directories
Wildcards are useful for selecting groups of files and directories

echo "Hello" 

standard input, abbreviated as stdin, is information inputted into the terminal through the keyboard or input device.
standard output, abbreviated as stdout, is the information outputted after a process is run.
standard error, abbreviated as stderr, is an error message outputted by a failed process.

echo "Hello" > hello.txt
The > command redirects the standard output to a file. Here, "Hello" is entered as the standard input. The standard output "Hello" is redirected by > to the file hello.txt.

cat hello.txt
cat command outputs the contents of a file to the terminal. When you type cat hello.txt, the contents of hello.txt are displayed.

Dump file contents via cat from one file into another
cat oceans.txt > continents.txt
Note that > overwrites all original content in continents.txt. When you view the output data by typing cat on continents.txt, 
you will see only the contents of oceans.txt.


cat glaciers.txt >> rivers.txt
>> takes the standard output of the command on the left and appends (adds) it to the file on the right. 
You can view the output data of the file with cat and the filename.
Here, the the output data of rivers.txt will contain the original contents of rivers.txt with the content of glaciers.txt appended to it.

cat < lakes.txt
< takes the standard input from the file on the right and inputs it into the program on the left. Here, lakes.txt is the standard input for the cat command. The standard output appears in the terminal.


cat volcanoes.txt | wc  
| is a “pipe”. The | takes the standard output of the command on the left, 
and pipes it as standard input to the command on the right. You can think of this as “command to command” redirection.
Here the output of cat volcanoes.txt is the standard input of wc. in turn, 
the wc command outputs the number of lines, words, and characters in volcanoes.txt, respectively.

cat volcanoes.txt | wc | cat > islands.txt 
Multiple |s can be chained together. Here the standard output of cat volcanoes.txt is “piped” to the wc command. 
The standard output of wc is then “piped” to cat. Finally, the standard output of cat is redirected to islands.txt.

cat lakes.txt | sort > sorted-lakes.txt 
Here, the command takes the standard output from cat lakes.txt and “pipes” it to sort. 
The standard output of sort is redirected to sorted-lakes.txt.

sort deserts.txt | uniq
A more effective way to call uniq is to call sort to alphabetize a file, and “pipe” the standard output to uniq. 
Here by piping sort deserts.txt to uniq, 
all duplicate lines are alphabetized (and thereby made adjacent) and filtered out.

grep Mount mountains.txt 
grep stands for “global regular expression print”. It searches files for lines that match a pattern and returns the results. It is also case sensitive. Here, grep searches for “Mount” in mountains.txt.

grep -i Mount mountains.txt
grep -i enables the command to be case insensitive. Here, grep searches for capital or lowercase strings that match Mount in mountains.txt.

grep -R Arctic /home/ccuser/workspace/geography
grep -R searches all files in a directory and outputs filenames and lines containing matched results. -R stands for “recursive”. 
Here grep -R searches the /home/ccuser/workspace/geography directory for the string “Arctic” and outputs 
filenames and lines with matched results.

grep -Rl Arctic /home/ccuser/workspace/geography
grep -Rl searches all files in a directory and outputs only filenames with matched results. 
-R stands for “recursive” and l stands for “files with matches”. Here grep -Rl searches the 
/home/ccuser/workspace/geography directory for the string “Arctic” and outputs filenames with matched results.

sed 's/snow/rain/' forests.txt 
sed stands for “stream editor”. It accepts standard input and modifies it based on an expression, before displaying it as output data. 
It is similar to “find and replace”.
Let’s look at the expression 's/snow/rain/':
s: stands for “substitution”. it is always used when using sed for substitution.
snow: the search string, the text to find.
rain: the replacement string, the text to add in place.
In this case, sed searches forests.txt for the word “snow” and replaces it with “rain.” 
Importantly, the above command will only replace the first instance of “snow” on a line.

sed 's/snow/rain/g' forests.txt 
The above command uses the g expression, meaning “global”. Here sed searches forests.txt for the word 
“snow” and replaces it with “rain”, globally. All instances of “snow” on a line will be turned to “rain
FIND & REPLACE ALL 

Redirection reroutes standard input, standard output, and standard error.

The common redirection commands are:

> redirects standard output of a command to a file, overwriting previous content.
>> redirects standard output of a command to a file, appending new content to old content.
< redirects standard input to a command.
| redirects standard output of a command to another command.
A number of other commands are powerful when combined with redirection commands:

sort: sorts lines of text alphabetically.
uniq: filters duplicate, adjacent lines of text.
grep: searches for a text pattern and outputs it.
sed : searches for a text pattern, modifies it, and outputs it.
